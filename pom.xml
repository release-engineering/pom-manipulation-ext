<?xml version="1.0"?>
<!--

    Copyright (C) 2012 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.redhat.rcm</groupId>
    <artifactId>redhat-releng-tools</artifactId>
    <version>12</version>
  </parent>

  <groupId>org.commonjava.maven.ext</groupId>
  <artifactId>pom-manipulation-parent</artifactId>
  <version>4.23-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>POM Manipulation Extension for Maven</name>
  <url>https://github.com/release-engineering/pom-manipulation-ext</url>
  <inceptionYear>2012</inceptionYear>

  <description>
    Manipulation Tool (available as library, extension and CLI) for Apache Maven that allows pre-processing of Maven pom.xml's.
  </description>

  <licenses>
    <license>
      <name>APLv2.0</name>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jdcasey</id>
      <name>John Casey</name>
      <email>jdcasey@commonjava.org</email>
    </developer>
    <developer>
      <id>rnc</id>
      <name>Nick Cross</name>
      <email>ncross@redhat.com</email>
    </developer>
    <developer>
      <id>pgier</id>
      <name>Paul Gier</name>
      <email>pgier@redhat.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/release-engineering/pom-manipulation-ext.git</connection>
    <developerConnection>scm:git:git@github.com:release-engineering/pom-manipulation-ext.git</developerConnection>
    <url>https://github.com/release-engineering/pom-manipulation-ext</url>
    <tag>pom-manipulation-parent-4.22</tag>
  </scm>

  <properties>
    <projectOwner>Red Hat, Inc.</projectOwner>

    <javaVersion>1.8</javaVersion>
    <javaTestVersion>${javaVersion}</javaTestVersion>
    <addJarIndex>false</addJarIndex>

    <mavenVersion>3.8.9</mavenVersion>
    <atlasVersion>0.17.2</atlasVersion>
    <daVersion>2.1.0</daVersion>
    <galleyVersion>1.20</galleyVersion>

    <groovyVersion>3.0.17</groovyVersion>
    <unirestVersion>3.14.2</unirestVersion>
    <jsonPathVersion>2.9.0</jsonPathVersion>
    <slf4jVersion>2.0.9</slf4jVersion>
    <logbackVersion>1.3.15</logbackVersion>
    <docletVersion>1.1</docletVersion>
    <lombokPluginVersion>1.18.20.0</lombokPluginVersion>
    <shadePluginVersion>3.2.4</shadePluginVersion>

    <!-- Both Jackson versions should be identical except if Jackson has not -->
    <!-- published javadoc for the micro version -->
    <jacksonVersion>2.15.0</jacksonVersion>
    <jacksonJavadocVersion>2.14</jacksonJavadocVersion>

    <argLine />
    <surefireSecurityManager />
  </properties>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-annotation</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-common</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-cli</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-cli</artifactId>
        <classifier>minimal</classifier>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-core</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-core</artifactId>
        <version>4.23-SNAPSHOT</version>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-ext</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-io</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-io</artifactId>
        <version>4.23-SNAPSHOT</version>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-integration-test</artifactId>
        <version>4.23-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.ext</groupId>
        <artifactId>pom-manipulation-integration-test</artifactId>
        <version>4.23-SNAPSHOT</version>
        <type>test-jar</type>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-artifact</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-compat</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-model</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-model-builder</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-settings</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-settings-builder</artifactId>
        <version>${mavenVersion}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>apache-maven</artifactId>
        <version>${mavenVersion}</version>
        <type>zip</type>
        <classifier>bin</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.aether</groupId>
        <artifactId>aether-api</artifactId>
        <version>1.1.0</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>

      <dependency>
        <groupId>org.commonjava.maven.atlas</groupId>
        <artifactId>atlas-identities</artifactId>
        <version>${atlasVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.galley</groupId>
        <artifactId>galley-api</artifactId>
        <version>${galleyVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.galley</groupId>
        <artifactId>galley-core</artifactId>
        <version>${galleyVersion}</version>
        <exclusions>
          <exclusion>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.galley</groupId>
        <artifactId>galley-transport-httpclient</artifactId>
        <version>${galleyVersion}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.galley</groupId>
        <artifactId>galley-transport-filearc</artifactId>
        <version>${galleyVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.maven.galley</groupId>
        <artifactId>galley-maven</artifactId>
        <version>${galleyVersion}</version>
      </dependency>

      <dependency>
        <groupId>com.redhat.resilience.otel</groupId>
        <artifactId>opentelemetry-ext-cli-java</artifactId>
        <version>1.2.0</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.da</groupId>
        <artifactId>reports-model</artifactId>
        <version>${daVersion}</version>
      </dependency>

      <!-- Plexus Dependencies Reference: -->
      <!-- https://cwiki.apache.org/confluence/display/MAVEN/Plexus+dependencies -->
      <!-- Only used by PropertyInterpolator -->
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-interpolation</artifactId>
        <version>1.26</version>
        <scope>provided</scope>
      </dependency>
      <!-- Technically this has been replaced by maven-shared-utils -->
      <!-- https://maven.apache.org/shared/maven-shared-utils/index.html -->
      <!-- but Maven Core still uses plexus-utils -->
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>3.4.2</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>4.0</version>
        <classifier>no_aop</classifier>
      </dependency>

      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>4.6.3</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.15</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.14.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.19.0</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
      </dependency>
      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom2</artifactId>
        <version>2.0.6.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.release</groupId>
        <artifactId>maven-release-manager</artifactId>
        <version>3.0.0-M4</version>
        <!-- As we only want the immediate dependency and some of the transitives cause -->
        <!-- clashes then exclude everything for simplicity -->
        <exclusions>
          <exclusion>
            <groupId>*</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.release</groupId>
        <artifactId>maven-release-api</artifactId>
        <version>3.0.0-M4</version>
        <!-- As we only want the immediate dependency and some of the transitives cause -->
        <!-- clashes then exclude everything for simplicity -->
        <exclusions>
          <exclusion>
            <groupId>*</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.konghq</groupId>
        <artifactId>unirest-java</artifactId>
        <version>${unirestVersion}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- https://mvnrepository.com/artifact/com.konghq/unirest-objectmapper-jackson -->
      <dependency>
        <groupId>com.konghq</groupId>
        <artifactId>unirest-objectmapper-jackson</artifactId>
        <version>${unirestVersion}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jacksonVersion}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jacksonVersion}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jacksonVersion}</version>
      </dependency>

      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>${jsonPathVersion}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>9.4.51.v20230217</version>
      </dependency>

      <!-- Attempting to upgrade this causes performance issues on Appveyor CI -->
      <dependency>
        <groupId>org.eclipse.sisu</groupId>
        <artifactId>org.eclipse.sisu.plexus</artifactId>
        <version>0.3.4</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4jVersion}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logbackVersion}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logbackVersion}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>${groovyVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-json</artifactId>
        <version>${groovyVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-xml</artifactId>
        <version>${groovyVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.ivy</groupId>
        <artifactId>ivy</artifactId>
        <version>2.5.2</version>
      </dependency>

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>2.0</version>
      </dependency>
      <dependency>
        <groupId>com.squareup</groupId>
        <artifactId>javapoet</artifactId>
        <version>1.13.0</version>
      </dependency>

      <!-- Add this as Unirest / Galley have different versions -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.13</version>
      </dependency>

      <dependency>
        <groupId>com.github.olivergondza</groupId>
        <artifactId>maven-jdk-tools-wrapper</artifactId>
        <version>0.1</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.26</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.goots.hiderdoclet</groupId>
        <artifactId>doclet</artifactId>
        <version>${docletVersion}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.byteman</groupId>
        <artifactId>byteman-bmunit</artifactId>
        <version>4.0.19</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-core</artifactId>
        <version>2.10.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-matchers</artifactId>
        <version>2.9.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.stefanbirkner</groupId>
        <artifactId>system-rules</artifactId>
        <version>1.19.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <escapeString>\</escapeString>
            <propertiesEncoding>UTF-8</propertiesEncoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <releaseProfiles>run-its,skipLicenseOnPerformRelease</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${shadePluginVersion}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <argLine>@{argLine} -Djdk.attach.allowAttachSelf -Dorg.jboss.byteman.transform.all=true ${surefireSecurityManager}</argLine>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <additionalClasspathElements>
              <additionalClasspathElement>${java.home}/../lib/tools.jar</additionalClasspathElement>
            </additionalClasspathElements>
            <!-- ensure we don't inherit a byteman jar from any env settings -->
            <environmentVariables>
              <BYTEMAN_HOME />
            </environmentVariables>
            <systemProperties>
                <property>
                    <name>org.jboss.byteman.home</name>
                  <value />
                </property>
            </systemProperties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.soebes.maven.plugins</groupId>
          <artifactId>iterator-maven-plugin</artifactId>
          <version>0.3</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <configuration>
            <excludes combine.children="append">
              <exclude>ide-config/eclipse.importorder</exclude>
              <exclude>**/commonjava/maven/ext/common/ExceptionHelper.java</exclude>
              <exclude>**/src/test/resources/org/commonjava/maven/ext/io/pom.xml</exclude>
              <exclude>**/src/test/resources/gavs.txt</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>1.20</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.8</version>
        </plugin>
        <plugin>
          <groupId>org.bsc.maven</groupId>
          <artifactId>maven-processor-plugin</artifactId>
          <version>3.3.3</version>
        </plugin>
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${lombokPluginVersion}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
        <version>${lombokPluginVersion}</version>
        <executions>
          <execution>
            <id>delombok</id>
            <phase>process-sources</phase>
            <goals>
              <goal>delombok</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/javadoc-generated-sources</outputDirectory>
              <addOutputDirectory>false</addOutputDirectory>
              <sourceDirectory>src/main/java</sourceDirectory>
              <formatPreferences>
                <javaLangAsFQN>skip</javaLangAsFQN>
              </formatPreferences>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <source>8</source>
          <quiet>true</quiet>
          <detectJavaApiLink>true</detectJavaApiLink>
          <author>false</author>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <configuration>
              <sourcepath>${project.build.directory}/javadoc-generated-sources</sourcepath>
              <doclet>org.goots.hiderdoclet.doclet.JavadocFilter</doclet>
              <docletArtifact>
                <groupId>org.goots.hiderdoclet</groupId>
                <artifactId>doclet</artifactId>
                <version>${docletVersion}</version>
              </docletArtifact>
              <links>
                <!-- TODO: Doesn't seem to work in JDK 11 -->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-common/${project.version}</link>-->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-io/${project.version}</link>-->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-core/${project.version}</link>-->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-cli/${project.version}</link>-->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-ext/${project.version}</link>-->
<!--                <link>https://www.javadoc.io/doc/org.commonjava.maven.ext/pom-manipulation-integration-test/${project.version}</link>-->

                <link>https://javadoc.io/doc/org.commonjava.maven.atlas/atlas-identities/${atlasVersion}</link>
                <link>https://javadoc.io/doc/org.commonjava.maven.galley/galley-api/${galleyVersion}</link>
                <link>https://javadoc.io/doc/org.commonjava.maven.galley/galley-maven/${galleyVersion}</link>

                <link>https://maven.apache.org/ref/${mavenVersion}/maven-model/apidocs</link>
                <link>https://maven.apache.org/ref/${mavenVersion}/maven-core/apidocs</link>
                <link>https://maven.apache.org/ref/${mavenVersion}/maven-artifact/apidocs</link>

                <link>https://www.slf4j.org/apidocs</link>
                <link>https://www.javadoc.io/doc/com.jayway.jsonpath/json-path/${jsonPathVersion}</link>
                <link>https://www.javadoc.io/doc/org.codehaus.groovy/groovy-all/${groovyVersion}</link>
                <link>https://fasterxml.github.io/jackson-core/javadoc/${jacksonJavadocVersion}</link>
              </links>
              <additionalJOptions>
                <additionalJOption>-J--add-exports=jdk.javadoc/jdk.javadoc.internal.tool=ALL-UNNAMED</additionalJOption>
              </additionalJOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>check-java-api</id>
            <!-- It needs to run after class compilation. No need to include test classes -->
            <!-- as it does not support it: https://github.com/mojohaus/animal-sniffer/issues/5 -->
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <ignoreDependencies>true</ignoreDependencies>
              <signature>
                <groupId>org.codehaus.mojo.signature</groupId>
                <artifactId>java18</artifactId>
                <version>1.0</version>
              </signature>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <propertyName>invoker.mavenOpts</propertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <modules>
    <module>annotation</module>
    <module>common</module>
    <module>io</module>
    <module>core</module>
    <module>cli</module>
    <module>ext</module>
    <module>integration-test</module>
    <module>coverage-reporting</module>
  </modules>


  <profiles>
    <profile>
      <id>java18</id>
      <activation>
        <jdk>[18,]</jdk>
      </activation>
      <properties>
        <!-- Security manager under JDK18 causes issues: https://github.com/stefanbirkner/system-rules/issues/85 -->
        <surefireSucurityManager>-Djava.security.manager=allow</surefireSucurityManager>
      </properties>
    </profile>
  </profiles>
</project>
